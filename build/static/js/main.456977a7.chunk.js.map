{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","concat","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sortByOptions","最佳匹配","最高评级","最多光顾","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","key","onClick","handleSortByChange","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","id","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","ReactDOM","render","components_App_App","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.456977a7.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=''/>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category.toUpperCase()}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map(business => {\n            return <Business business={business} />\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: '',\n            location: '',\n            sortBy: 'best_match'\n        };\n\n        this.handleTermChange = this.handleTermChange.bind(this);\n        this.handleLocationChange = this.handleLocationChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    sortByOptions = {\n        '最佳匹配': 'best_match',\n        '最高评级': 'rating',\n        '最多光顾': 'review_count'  \n    };\n\n    getSortByClass(sortByOption) {\n        if(this.state.sortBy === sortByOption) {\n            return 'active';\n        }\n        return '';\n    }\n\n    // Handle State Changes\n    handleSortByChange(sortByOption) {\n        this.setState({\n            sortBy: sortByOption\n        });\n    }\n    handleTermChange(event) {\n        this.setState({\n            term: event.target.value\n        });\n    }\n    handleLocationChange(event) {\n        this.setState({\n            location: event.target.value\n        });\n    }\n    handleSearch(event) {\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n        event.preventDefault();\n    }\n\n    renderSortByOptions() {\n        return Object.keys(this.sortByOptions).map(sortByOption => {\n            let sortByOptionValue = this.sortByOptions[sortByOption];\n            return (\n                <li \n                    className={this.getSortByClass(sortByOptionValue)}\n                    key={sortByOptionValue}\n                    onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                        {sortByOption}\n                </li>\n            );\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <div className=\"SearchBar-sort-options\">\n                    <ul>\n                        {this.renderSortByOptions()}\n                    </ul>\n                </div>\n                <div className=\"SearchBar-fields\">\n                    <input onChange={this.handleTermChange} placeholder=\"英文输入想要搜索的商家饭店/旅馆/机场...：）\" />\n                    <input onChange={this.handleLocationChange} placeholder=\"英文输入国家和地区：）\" />\n                </div>\n                <div className=\"SearchBar-submit\">\n                    <a onClick={this.handleSearch}>一起去看看</a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","const apiKey = '6JAVZanSkqQwW6ys9WgTT_ILqXALTU-A-0iH6AALYCQi7HL-vtQvHGyMmWTVi1eIqXS8Mgiq3wyFFL3BpYEpjnuO3v8o6-KoFw4QD4lxpotebPNPM8yZ7MLHt6uFXnYx';\n\n\n\n\nconst Yelp = {\n  search(term, location, sortBy) {\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n      {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(jsonResponse => {\n        if (jsonResponse.businesses) {\n          return jsonResponse.businesses.map(business => {\n            return {\n              id: business.id,\n              imageSrc: business.image_url,\n              name: business.name,\n              address: business.location.address1,\n              city: business.location.city,\n              state: business.location.state,\n              zipCode: business.location.zip_code,\n              category: business.categories[0].title,\n              rating: business.rating,\n              reviewCount: business.review_count\n            };\n          });\n        }\n      });\n  }\n};\n\nexport default Yelp;\n","import React from 'react';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'businesses': []\n    }\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        'businesses': businesses\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Business Search Anywhere</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}